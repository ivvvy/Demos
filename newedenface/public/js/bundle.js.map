{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/FooterActions.js","app/actions/NavbarActions.js","app/alt.js","app/components/App.js","app/components/Footer.js","app/components/Home.js","app/components/Navbar.js","app/main.js","app/routes.js","app/stores/FooterStore.js","app/stores/NavbarStore.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js"],"names":[],"mappings":"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,MAA7B,CAAoC,OAApC;AACH,aAFD,EAEE,IAFF;AAGH;;;4CAEmB,I,EAAK;AACrB,iBAAK,WAAL,GAAiB,KAAK,WAAtB;AACH;;;8CAEqB,S,EAAU;AAC5B,iBAAK,kBAAL,GAAwB,SAAxB;AACH;;;4CAEmB,K,EAAM;AACtB,iBAAK,WAAL,GAAiB,MAAM,MAAN,CAAa,KAA9B;AACH;;;mDAE0B,I,EAAK;AAC5B,iBAAK,eAAL,GAAqB,KAAK,KAA1B;AACH;;;gDAEuB,K,EAAM;AAC1B,mBAAO,KAAP,CAAa,MAAM,YAAN,CAAmB,OAAhC;AACH;;;;;;kBAGU,cAAI,WAAJ,CAAgB,WAAhB,C;;;AC5CfpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import alt from '../alt';\r\n\r\nclass FooterActions {\r\n    constructor(){\r\n        this.generateActions(\r\n            'getTopCharactersSuccess',\r\n            'getTopCharactersFail'\r\n        );\r\n    }\r\n\r\n    getTopCharacters(){\r\n        $.ajax({\r\n            url:'/api/characters/top'})\r\n          .done((data) =>{\r\n                this.actions.getTopCharactersSuccess(data)\r\n            })\r\n          .fail((jqXhr) =>{\r\n                this.actions.getTopCharactersFail(jqXhr)\r\n            });\r\n    }\r\n}\r\n\r\nexport default alt.createActions(FooterActions);","import alt from '../alt';\r\nimport {assign} from 'underscore';\r\n\r\nclass NavbarActions{\r\n    constructor(){\r\n        this.generateActions(\r\n          'updateOnlineUsers',\r\n          'updateAjaxAnimation',\r\n          'updateSearchQuery',\r\n          'getCharacterCountSuccess',\r\n          'getCharacterCountFail',\r\n          'findCharacterSuccess',\r\n          'findCharacterFail'\r\n        );\r\n    }\r\n\r\n    findCharacter(payload){\r\n        $.ajax({\r\n            url:'/api/characters/search',\r\n            data:{name:payload.searchQuery}\r\n        })\r\n          .done((data) =>{\r\n               assign(payload,data);\r\n               this.actions.findCharacterSuccess(payload);\r\n          })\r\n          .fail(() =>{\r\n               this.actions.findCharacterFail(payload);\r\n          });\r\n    }\r\n\r\n    getCharacterCount(){\r\n        $.ajax({url:'/api/characters/count'})\r\n          .done((data) =>{\r\n            this.ations.getCharacterCountSuccess(data);\r\n          })\r\n          .fail((jqXhr) =>{\r\n            this.ations.getCharacterCountFail(jqXhr)\r\n          });\r\n    }\r\n}\r\n\r\nexport default alt.createActions(NavbarActions);","import Alt from 'alt';\r\n\r\nexport default new Alt();","import React from 'react';\r\nimport Footer from './Footer';\r\nimport Navbar from './Navbar';\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return (\r\n          <div>\r\n            <Navbar history={this.props.history} />\r\n            {this.props.children}\r\n            <Footer />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport FooterStore from '../stores/FooterStore';\r\nimport FooterActions from '../actions/FooterActions';\r\n\r\nclass Footer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=FooterStore.getState();\r\n        this.onChange=this.onChange.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        FooterStore.listen(this.onChange);\r\n        FooterActions.getTopCharacters();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        FooterStore.unlisten(this.onChange);\r\n    }\r\n\r\n    onChange(state){\r\n        this.setState(state);\r\n    }\r\n\r\n    render(){\r\n        let leaderboardCharacters=this.state.characters.map((character) =>{\r\n               return (\r\n                   <li key={character.characterId}>\r\n                        <Link to={'/characters/'+character.characterId}>\r\n                            <img className='thumb-md' src={'http://image.eveonline.com/Character/'+character.characterId+'_128.jpg'} />\r\n                        </Link>\r\n                   </li>\r\n               )\r\n            });\r\n\r\n    return(\r\n      <footer>\r\n        <div className='container'>\r\n           <div className='row'>\r\n              <div className='col-sm-5'>\r\n                <h3 className='lead'><strong>Information</strong> and<strong> Copyright</strong></h3>\r\n                <p>Powered by <strong>Node.js </strong>, <strong>MongoDB</strong> and <strong>React</strong> with Flux architecture and server-side rendering.</p>\r\n                <p>You may view the <a href='https://github.com/sahat/newedenfaces-react'>Source Code</a> behind this project on Github.</p>\r\n                <p>© 2015 Sahat Yalkabov.</p>\r\n              </div>\r\n              <div className='col-sm-7 hidden-xs'>\r\n                <h3 className='lead'><strong>Leaderboard</strong> Top 5 Characters</h3>\r\n                   <ul className='list-inline'>\r\n                      {leaderboardCharacters}\r\n                   </ul>\r\n              </div>\r\n           </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nclass Home extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className='alert alert-info'>\r\n                Hello from Home Component\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router';\r\nimport NavbarStore from '../stores/NavbarStore';\r\nimport NavbarActions from '../actions/NavbarActions';\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = NavbarStore.getState();\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    NavbarStore.listen(this.onChange);\r\n    NavbarActions.getCharacterCount();\r\n\r\n    let socket = io.connect();\r\n\r\n    socket.on('onlineUsers', (data) => {\r\n      NavbarActions.updateOnlineUsers(data);\r\n    });\r\n\r\n    $(document).ajaxStart(() => {\r\n      NavbarActions.updateAjaxAnimation('fadeIn');\r\n    });\r\n\r\n    $(document).ajaxComplete(() => {\r\n      setTimeout(() => {\r\n        NavbarActions.updateAjaxAnimation('fadeOut');\r\n      }, 750);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    NavbarStore.unlisten(this.onChange);\r\n  }\r\n\r\n  onChange(state) {\r\n    this.setState(state);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    let searchQuery = this.state.searchQuery.trim();\r\n\r\n    if (searchQuery) {\r\n      NavbarActions.findCharacter({\r\n        searchQuery: searchQuery,\r\n        searchForm: this.refs.searchForm,\r\n        history: this.props.history\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className='navbar navbar-default navbar-static-top'>\r\n        <div className='navbar-header'>\r\n          <button type='button' className='navbar-toggle collapsed' data-toggle='collapse' data-target='#navbar'>\r\n            <span className='sr-only'>Toggle navigation</span>\r\n            <span className='icon-bar'></span>\r\n            <span className='icon-bar'></span>\r\n            <span className='icon-bar'></span>\r\n          </button>\r\n          <Link to='/' className='navbar-brand'>\r\n            <span className={'triangles animated ' + this.state.ajaxAnimationClass}>\r\n              <div className='tri invert'></div>\r\n              <div className='tri invert'></div>\r\n              <div className='tri'></div>\r\n              <div className='tri invert'></div>\r\n              <div className='tri invert'></div>\r\n              <div className='tri'></div>\r\n              <div className='tri invert'></div>\r\n              <div className='tri'></div>\r\n              <div className='tri invert'></div>\r\n            </span>\r\n            NEF\r\n            <span className='badge badge-up badge-danger'>{this.state.onlineUsers}</span>\r\n          </Link>\r\n        </div>\r\n        <div id='navbar' className='navbar-collapse collapse'>\r\n          <form ref='searchForm' className='navbar-form navbar-left animated' onSubmit={this.handleSubmit.bind(this)}>\r\n            <div className='input-group'>\r\n              <input type='text' className='form-control' placeholder={this.state.totalCharacters + ' characters'} value={this.state.searchQuery} onChange={NavbarActions.updateSearchQuery} />\r\n              <span className='input-group-btn'>\r\n                <button className='btn btn-default' onClick={this.handleSubmit.bind(this)}><span className='glyphicon glyphicon-search'></span></button>\r\n              </span>\r\n            </div>\r\n          </form>\r\n          <ul className='nav navbar-nav'>\r\n            <li><Link to='/'>Home</Link></li>\r\n            <li><Link to='/stats'>Stats</Link></li>\r\n            <li className='dropdown'>\r\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Top 100 <span className='caret'></span></a>\r\n              <ul className='dropdown-menu'>\r\n                <li><Link to='/top'>Top Overall</Link></li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/top/caldari'>Caldari</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/top/caldari/achura'>Achura</Link></li>\r\n                    <li><Link to='/top/caldari/civire'>Civire</Link></li>\r\n                    <li><Link to='/top/caldari/deteis'>Deteis</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/top/gallente'>Gallente</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/top/gallente/gallente'>Gallente</Link></li>\r\n                    <li><Link to='/top/gallente/intaki'>Intaki</Link></li>\r\n                    <li><Link to='/top/gallente/jin-mei'>Jin-Mei</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/top/minmatar'>Minmatar</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/top/minmatar/brutor'>Brutor</Link></li>\r\n                    <li><Link to='/top/minmatar/sebiestor'>Sebiestor</Link></li>\r\n                    <li><Link to='/top/minmatar/vherokior'>Vherokior</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/top/amarr'>Amarr</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/top/amarr/amarr'>Amarr</Link></li>\r\n                    <li><Link to='/top/amarr/ni-kunni'>Ni-Kunni</Link></li>\r\n                    <li><Link to='/top/amarr/khanid'>Khanid</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='divider'></li>\r\n                <li><Link to='/shame'>Hall of Shame</Link></li>\r\n              </ul>\r\n            </li>\r\n            <li className='dropdown'>\r\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Female <span className='caret'></span></a>\r\n              <ul className='dropdown-menu'>\r\n                <li><Link to='/female'>All</Link></li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/female/caldari'>Caldari</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/female/caldari/achura'>Achura</Link></li>\r\n                    <li><Link to='/female/caldari/civire/'>Civire</Link></li>\r\n                    <li><Link to='/female/caldari/deteis'>Deteis</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/female/gallente'>Gallente</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/female/gallente/gallente'>Gallente</Link></li>\r\n                    <li><Link to='/female/gallente/intaki'>Intaki</Link></li>\r\n                    <li><Link to='/female/gallente/jin-mei'>Jin-Mei</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/female/minmatar'>Minmatar</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/female/minmatar/brutor'>Brutor</Link></li>\r\n                    <li><Link to='/female/minmatar/sebiestor'>Sebiestor</Link></li>\r\n                    <li><Link to='/female/minmatar/vherokior'>Vherokior</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/female/amarr'>Amarr</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/female/amarr/amarr'>Amarr</Link></li>\r\n                    <li><Link to='/female/amarr/ni-kunni'>Ni-Kunni</Link></li>\r\n                    <li><Link to='/female/amarr/khanid'>Khanid</Link></li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className='dropdown'>\r\n              <a href='#' className='dropdown-toggle' data-toggle='dropdown'>Male <span className='caret'></span></a>\r\n              <ul className='dropdown-menu'>\r\n                <li><Link to='/male'>All</Link></li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/male/caldari'>Caldari</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/male/caldari/achura'>Achura</Link></li>\r\n                    <li><Link to='/male/caldari/civire'>Civire</Link></li>\r\n                    <li><Link to='/male/caldari/deteis'>Deteis</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/male/gallente'>Gallente</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/male/gallente/gallente'>Gallente</Link></li>\r\n                    <li><Link to='/male/gallente/intaki'>Intaki</Link></li>\r\n                    <li><Link to='/male/gallente/jin-mei'>Jin-Mei</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/male/minmatar'>Minmatar</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/male/minmatar/brutor'>Brutor</Link></li>\r\n                    <li><Link to='/male/minmatar/sebiestor'>Sebiestor</Link></li>\r\n                    <li><Link to='/male/minmatar/vherokior'>Vherokior</Link></li>\r\n                  </ul>\r\n                </li>\r\n                <li className='dropdown-submenu'>\r\n                  <Link to='/male/amarr'>Amarr</Link>\r\n                  <ul className='dropdown-menu'>\r\n                    <li><Link to='/male/amarr/amarr'>Amarr</Link></li>\r\n                    <li><Link to='/male/amarr/ni-kunni'>Ni-Kunni</Link></li>\r\n                    <li><Link to='/male/amarr/khanid'>Khanid</Link></li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li><Link to='/add'>Add</Link></li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Router from 'react-router';\r\nimport ReactDOM from 'react-dom';\r\nimport createBrowseHistory from 'history/lib/createBrowserHistory';\r\nimport routes from  './routes'\r\n\r\nlet history = createBrowseHistory();\r\n\r\nReactDOM.render(<Router history={history}>{routes}</Router>, document.getElementById('app'));","import React from 'react';\r\nimport {Route} from 'react-router';\r\nimport App from './components/App';\r\nimport Home from './components/Home';\r\n\r\nexport default (\r\n    <Route component={App}>\r\n        <Route path='/' component={Home} />\r\n    </Route>\r\n);","import alt from '../alt';\r\nimport FooterActions from '../actions/FooterActions';\r\n\r\nclass FooterStore{\r\n    constructor(){\r\n        this.bindActions(FooterActions);\r\n        this.characters=[];\r\n    }\r\n\r\n    onGetTopCharacterSuccess(data){\r\n        this.characters=data.slice(0,5);\r\n    }\r\n\r\n    onGetTopCharactersFail(jqXhr){\r\n        toastr.error(jqXhr.responseJSON && jqXhr.responseJSON.message || jqXhr.responseText || jqXhr.statusText);\r\n    }\r\n}\r\n\r\nexport default alt.createStore(FooterStore);","import alt from '../alt';\r\nimport NavbarActions from '../actions/NavbarActions';\r\n\r\nclass NavbarStore{\r\n    constructor(){\r\n        this.bindActions(NavbarActions);\r\n        this.totalCharacters=0;\r\n        this.onlineUsers=0;\r\n        this.searchQuery='';\r\n        this.ajaxAnimationClass='';\r\n    }\r\n\r\n    onFindCharacterSuccess(payload){\r\n        payload.history.pushState(null,'/characters/'+payload.characterId);\r\n    }\r\n\r\n    onFindCharacterFail(payload){\r\n        payload.searchFrom.classList.add('shake');\r\n        setTimeout(()=>{\r\n            payload.searchForm.classList.remove('shake');\r\n        },1000);\r\n    }\r\n\r\n    onUpdateOnlineUsers(data){\r\n        this.onlineUsers=data.onlineUsers;\r\n    }\r\n\r\n    onUpdateAjaxAnimation(className){\r\n        this.ajaxAnimationClass=className;\r\n    }\r\n\r\n    onUpdateSearchQuery(event){\r\n        this.searchQuery=event.target.value;\r\n    }\r\n\r\n    onGetCharacterCountSuccess(data){\r\n        this.totalCharacters=data.count;\r\n    }\r\n\r\n    onGetCharacterCountFail(jqXhr){\r\n        toastr.error(jqXhr.responseJSON.message);\r\n    }\r\n}\r\n\r\nexport default alt.createStore(NavbarStore);","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}